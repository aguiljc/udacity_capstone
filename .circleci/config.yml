# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

orbs:
  docker: circleci/docker@2.1.2
  kubernetes: circleci/kubernetes@1.3.1
  aws-eks: circleci/aws-eks@2.2.0

jobs:

  lint-container:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo     
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            make install
      - run:
          name: run lint
          command: |
              make lint 

  build-push-container:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: aguiljc/udacity
          tag: "1.2"
      - docker/push:
          digest-path: /tmp/digest.txt
          image: aguiljc/udacity
          tag: "1.2"
      - run:
          command: |
            echo "This is the path: $(</tmp/digest.txt)"

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/udacity-app

workflows:
  default:
    jobs:
      - lint-container
      - build-push-container:
         requires: [lint-container]
      # - aws-eks/create-cluster:
      #     cluster-name: udacity-cluster
      #     requires: [build-push-container]
      - test-cluster:
          cluster-name: udacity-cluster
          requires: [build-push-container]
            # - aws-eks/create-cluster
      - create-deployment:
          cluster-name: udacity-cluster
          requires: [test-cluster]
      - aws-eks/update-container-image:
          cluster-name: udacity-cluster
          container-image-updates: udacity-app=aguiljc/udacity
          post-steps:
            - kubernetes/delete-resource:
                resource-names: udacity-app
                resource-types: deployment
                wait: true
          requires:
            - create-deployment
          resource-name: deployment/udacity-app

      # - aws-eks/delete-cluster:
      #     cluster-name: udacity-cluster
      #     requires:
      #       - aws-eks/update-container-image

