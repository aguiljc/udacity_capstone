# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: aguiljc/udacity
    docker:
      - image: cimg/base:2021.04 #circleci/buildpack-deps:stretch
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

orbs:
  docker: circleci/docker@2.1.4
  kubernetes: circleci/kubernetes@1.3.1
  aws-eks: circleci/aws-eks@0.2.3

jobs:

  lint-container:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo     
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            make install
      - run:
          name: run lint
          command: |
              make lint 

  build-container:
    machine: true
    working_directory: ~/app
    steps:
     - checkout
     - run: 
        name: Build and push the docker container
        command:
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKER_USER --password-stdin #|
          # docker build -t aguiljc/udacity . |
          # docker push udacity:latest # |
          # docker tag aguiljc/udacity aguiljc/udacity:latest

  new-build-container:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKER_USER --password-stdin |
            docker push $IMAGE_NAME:latest
          
workflows:
  default:
    jobs:
      - lint-container
      - new-build-container:
         requires: [lint-container]
      - publish-latest:
         requires: [new-build-container]